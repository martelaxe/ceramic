import { TileDocument } from '@ceramicnetwork/stream-tile';
import { CommitData, Context, StreamConstructor, StreamHandler, StreamState } from '@ceramicnetwork/common';
export declare class TileDocumentHandler implements StreamHandler<TileDocument> {
    get type(): number;
    get name(): string;
    get stream_constructor(): StreamConstructor<TileDocument>;
    applyCommit(commitData: CommitData, context: Context, state?: StreamState): Promise<StreamState>;
    _applyGenesis(commitData: CommitData, context: Context): Promise<StreamState>;
    _applySigned(commitData: CommitData, state: StreamState, context: Context): Promise<StreamState>;
    _applyAnchor(context: Context, commitData: CommitData, state: StreamState): Promise<StreamState>;
    _verifySignature(commitData: CommitData, context: Context, controller: string): Promise<void>;
}
//# sourceMappingURL=tile-document-handler.d.ts.map