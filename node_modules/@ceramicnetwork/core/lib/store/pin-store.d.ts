import { StateStore } from './state-store';
import { PinningBackend } from '@ceramicnetwork/common';
import CID from 'cids';
import StreamID from '@ceramicnetwork/streamid';
import { RunningState } from '../state-management/running-state';
export declare class PinStore {
    readonly stateStore: StateStore;
    readonly pinning: PinningBackend;
    readonly retrieve: (cid: CID) => Promise<any | null>;
    readonly resolve: (path: string) => Promise<CID>;
    constructor(stateStore: StateStore, pinning: PinningBackend, retrieve: (cid: CID) => Promise<any | null>, resolve: (path: string) => Promise<CID>);
    open(networkName: string): void;
    close(): Promise<void>;
    add(runningState: RunningState, force?: boolean): Promise<void>;
    rm(runningState: RunningState): Promise<void>;
    ls(streamId?: StreamID): Promise<string[]>;
    protected getComponentCIDsOfCommits(commits: Array<CID>): Promise<Array<CID>>;
}
//# sourceMappingURL=pin-store.d.ts.map