"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PubsubKeepalive = void 0;
const rxjs_1 = require("rxjs");
const pubsub_message_1 = require("./pubsub-message");
class PubsubKeepalive extends rxjs_1.Observable {
    constructor(pubsub, maxPubsubPublishInterval) {
        super((subscriber) => {
            pubsub.subscribe(subscriber);
            const pubsubKeepaliveInterval = rxjs_1.interval(this.maxPubsubPublishInterval / 2).subscribe(() => {
                this.publishPubsubKeepaliveIfNeeded();
            });
            return () => {
                pubsubKeepaliveInterval.unsubscribe();
            };
        });
        this.pubsub = pubsub;
        this.maxPubsubPublishInterval = maxPubsubPublishInterval;
        this.lastPublishedMessageDate = Date.now() - this.maxPubsubPublishInterval;
    }
    next(message) {
        this.lastPublishedMessageDate = Date.now();
        return this.pubsub.next(message);
    }
    publishPubsubKeepaliveIfNeeded() {
        const now = Date.now();
        if (now - this.lastPublishedMessageDate < this.maxPubsubPublishInterval / 2) {
            return;
        }
        const message = { typ: pubsub_message_1.MsgType.KEEPALIVE, ts: now };
        this.next(message);
    }
}
exports.PubsubKeepalive = PubsubKeepalive;
//# sourceMappingURL=pubsub-keepalive.js.map