"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExecutionQueue = void 0;
const named_task_queue_1 = require("./named-task-queue");
const await_semaphore_1 = require("await-semaphore");
class ExecutionQueue {
    constructor(concurrencyLimit, logger) {
        this.tasks = new named_task_queue_1.NamedTaskQueue((error) => {
            logger.err(error);
        });
        this.semaphore = new await_semaphore_1.Semaphore(concurrencyLimit);
    }
    forStream(streamId) {
        return {
            add: (task) => {
                return this.tasks.add(streamId.toString(), () => {
                    return this.semaphore.use(() => task());
                });
            },
            run: (task) => {
                return this.tasks.run(streamId.toString(), () => {
                    return this.semaphore.use(() => task());
                });
            },
        };
    }
    onIdle() {
        return this.tasks.onIdle();
    }
    pause() {
        this.tasks.pause();
    }
    async close() {
        await this.onIdle();
        this.pause();
    }
}
exports.ExecutionQueue = ExecutionQueue;
//# sourceMappingURL=execution-queue.js.map