"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateLink = void 0;
const rxjs_1 = require("rxjs");
const streamid_1 = require("@ceramicnetwork/streamid");
const common_1 = require("@ceramicnetwork/common");
class StateLink extends rxjs_1.Observable {
    constructor(initial, update$) {
        super((subscriber) => {
            const update$S = update$
                ? update$(this.state$.value).subscribe(this.state$)
                : rxjs_1.Subscription.EMPTY;
            this.state$.subscribe(subscriber).add(() => {
                update$S.unsubscribe();
            });
        });
        this.initial = initial;
        this.state$ = new common_1.StreamStateSubject(initial);
    }
    next(state) {
        this.state$.next(state);
    }
    get state() {
        return this.state$.value;
    }
    get value() {
        return this.state$.value;
    }
    get id() {
        return new streamid_1.StreamID(this.state.type, this.state.log[this.state.log.length - 1].cid);
    }
}
exports.StateLink = StateLink;
//# sourceMappingURL=state-link.js.map