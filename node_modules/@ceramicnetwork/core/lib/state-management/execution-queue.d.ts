import { NamedTaskQueue } from './named-task-queue';
import { CommitID, StreamID } from '@ceramicnetwork/streamid';
import { DiagnosticsLogger } from '@ceramicnetwork/common';
import { Semaphore } from 'await-semaphore';
import { TaskQueueLike } from '../pubsub/task-queue';
export declare class ExecutionQueue {
    readonly tasks: NamedTaskQueue;
    readonly semaphore: Semaphore;
    constructor(concurrencyLimit: number, logger: DiagnosticsLogger);
    forStream(streamId: StreamID | CommitID): TaskQueueLike;
    onIdle(): Promise<void>;
    pause(): void;
    close(): Promise<void>;
}
//# sourceMappingURL=execution-queue.d.ts.map