"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HandlersMap = void 0;
const stream_tile_handler_1 = require("@ceramicnetwork/stream-tile-handler");
const stream_caip10_link_handler_1 = require("@ceramicnetwork/stream-caip10-link-handler");
const streamid_1 = require("@ceramicnetwork/streamid");
function defaultHandlers() {
    const tile = new stream_tile_handler_1.TileDocumentHandler();
    const caip10Link = new stream_caip10_link_handler_1.Caip10LinkHandler();
    const handlers = new Map();
    handlers.set(tile.type, tile);
    handlers.set(caip10Link.type, caip10Link);
    return handlers;
}
class HandlersMap {
    constructor(logger, handlers) {
        this.logger = logger;
        this.handlers = handlers || defaultHandlers();
    }
    get(type) {
        const id = typeof type == 'string' ? streamid_1.StreamType.codeByName(type) : type;
        const handler = this.handlers.get(id);
        if (handler) {
            return handler;
        }
        else {
            throw new Error(type + ' is not a valid stream type');
        }
    }
    add(streamHandler) {
        this.logger.debug(`Registered handler for ${streamHandler.type} stream type`);
        this.handlers.set(streamHandler.type, streamHandler);
        return this;
    }
}
exports.HandlersMap = HandlersMap;
//# sourceMappingURL=handlers-map.js.map